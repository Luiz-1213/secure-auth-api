generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid()) @db.Uuid
  firstName String  @map("first_name")
  lastName  String  @map("last_name")
  email     String  @unique
  password  String
  photo     String?
  roleId    String  @map("role_id") @db.Uuid

  role         Role           @relation(fields: [roleId], references: [id])
  refreshToken RefreshToken[]

  @@map("users")
}

model Role {
  id          String           @id @default(uuid()) @db.Uuid
  name        String
  description String?
  permissions RolePermission[]
  user        User[]

  @@map("roles")
}

model Permission {
  id          String @id @default(uuid()) @db.Uuid
  name        String
  code        String @unique
  description String

  roles RolePermission[]

  @@map("permissions")
}

model RolePermission {
  roleId         String     @map("role_id") @db.Uuid
  permissionCode String     @map("permission_code")
  role           Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permisssion    Permission @relation(fields: [permissionCode], references: [code], onDelete: Cascade)

  @@id([roleId, permissionCode])
  @@map("roles_permissions")
}

model RefreshToken {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @map("user_id") @db.Uuid
  issuedAt  DateTime @default(now())
  expiresAt DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}
